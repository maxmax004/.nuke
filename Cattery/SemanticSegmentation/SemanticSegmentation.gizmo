version 13.1 v1
Gizmo {
 onCreate "import sys\nthis = nuke.thisNode()\ninference = nuke.toNode(f\"\{this.name()\}.Inference1\")\nthis[\"gpuName\"].setValue(inference[\"gpuName\"].value())\nthis[\"channelsIn\"].setValue(\"rgba.red, rgba.green, rgba.blue\")\ninference.forceValidate()\nis_enabled = inference\[\"modelFile\"\].enabled()\nif (sys.platform.lower() == \"darwin\") and (not inference\[\"useGPUIfAvailable\"\].enabled()): this\[\"useGPUIfAvailable\"\].setValue(False), this\[\"useGPUIfAvailable\"\].setEnabled(False)\nif not is_enabled:\n    for k in this.knobs(): this[k].setEnabled(False)\nthis[\"halfPrecision\"].setVisible(this[\"useGPUIfAvailable\"].enabled())"
 knobChanged "this = nuke.thisNode()\nthis[\"halfPrecision\"].setVisible(this[\"useGPUIfAvailable\"].value())"
 onDestroy "nuke.thisNode()\[\"knobChanged\"].setValue(\"\")"
 addUserKnob {20 SemanticSegmentation}
 addUserKnob {26 localGPU l "Local GPU:" T ""}
 addUserKnob {26 gpuName l "" -STARTLINE T "NVIDIA RTX A5000"}
 addUserKnob {6 useGPUIfAvailable l "Use GPU if available" t "Select this to render on the <b>Local GPU</b>, if available.\n\nYou can select this even if no GPU is currently available on your machine. The GPU will then be used whenever the script is opened on a machine which does have a GPU available. You should also select this if you wish to render from the command line with the <b>--gpu</b> option.\n\nIf this node requires full frames from its inputs, and is therefore unable to reduce its memory overhead, it will fall back to the CPU if an attempt to render a frame on the GPU fails due to lack of memory. When this occurs, a warning message will be printed to the console." +STARTLINE}
 useGPUIfAvailable true
 addUserKnob {26 ""}
 addUserKnob {26 channelsIn l "Channels In:" t "The channels the model expects as input." T "rgba.red, rgba.green, rgba.blue"}
 addUserKnob {41 in_colorspace l "Input Colorspace" t "Define the colorspace that the input image is in." T OCIOColorSpace1.in_colorspace}
 addUserKnob {41 chosenClass l Object t "Choose the object to segment in the input image." T Inference1.chosenClass}
 addUserKnob {6 halfPrecision l "Optimize for Speed and Memory" t "Whether to process at half float precision. This speeds up execution and enables the processing of larger images, however there is the risk of artifacts with some trained models." +STARTLINE}
}
 Input {
  inputs 0
  name Input1
  xpos 829
  ypos 35
 }
 OCIOColorSpace {
  in_colorspace scene_linear
  out_colorspace color_picking
  name OCIOColorSpace1
  xpos 829
  ypos 75
 }
 Inference {
  useGPUIfAvailable {{parent.useGPUIfAvailable}}
  modelFile "\[lsearch -inline \[plugins -all semantic_segmentation.cat] *.cat]"
  halfPrecision {{parent.halfPrecision}}
  serialiseKnob {chosen_class:wall;}
  name Inference1
  onDestroy "\nnuke.thisNode()\['knobChanged'].setValue('')"
  knobChanged "\nthis_node = nuke.thisNode()\nthis_node\['chosen_class'].setValue(int(this_node\['chosenClass'].getValue()))"
  selected true
  xpos 829
  ypos 124
  addUserKnob {20 User}
  addUserKnob {68 chosenClass l Object M {Cityscape/Wall Cityscape/Building Cityscape/Road Cityscape/Sidewalk Cityscape/Signboard Cityscape/Streetlight Cityscape/Fence Cityscape/Pole Cityscape/Railing Cityscape/Column Cityscape/House Cityscape/Bench Cityscape/Skyscraper Cityscape/Bridge Household/Floor Household/Door Household/Ceiling Household/Windowpane Household/Table Household/Painting Household/Chair Household/Vase Household/Stairs Household/Television Household/Countertop Household/Bookcase Household/Step Nature/Sky Nature/Tree Nature/Plant Nature/Grass Nature/Earth Nature/Mountain Nature/Flower Nature/Water Nature/Sea Nature/Field Nature/River Nature/Hill Objects/Book Objects/Bottle Objects/Bag Objects/Flag Objects/Computer Objects/Ball Person/Person Vehicles/Car Vehicles/Van Vehicles/Truck Vehicles/Bicycle Vehicles/Boat Vehicles/Bus Vehicles/Airplane Vehicles/Ship "" "" ""}}
  chosenClass Nature/Tree
 }
 Output {
  name Output1
  xpos 829
  ypos 192
 }
end_group
